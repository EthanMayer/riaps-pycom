//
// Auto-generated by edu.vanderbilt.riaps.generator.ComponenetGenerator.xtend
//
#include <LoggerBase.h>

namespace riapsmodbuscreqrepuart {
   namespace components {
      
      LoggerBase::LoggerBase(_component_conf_j &config, riaps::Actor &actor) : ComponentBase(config, actor) {
         
      }
      
      void LoggerBase::DispatchMessage(capnp::FlatArrayMessageReader* capnpreader, riaps::ports::PortBase *port) {
         auto portName = port->GetPortName();
         if (portName == PORT_SUB_RX_MODBUSDATA) {
            riapsModbusUART::LogData::Reader Rx_modbusData =
            capnpreader->getRoot<riapsModbusUART::LogData>();
            OnRx_modbusData(Rx_modbusData, port);
         }
         
      }
      
      void LoggerBase::DispatchInsideMessage(zmsg_t* zmsg, riaps::ports::PortBase* port) {
         //empty the header
      }
      
      
      LoggerBase::~LoggerBase() {
         
      }
   }
}
