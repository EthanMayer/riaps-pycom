//
// Auto-generated by edu.vanderbilt.riaps.generator.ComponenetGenerator.xtend
//

#ifndef RIAPS_CORE_COMPUTATIONALCOMPONENT_H
#define RIAPS_CORE_COMPUTATIONALCOMPONENT_H

#include "componentmodel/r_componentbase.h"
#include "riapsModbusUART/LogData.capnp.h"
#include "riapsModbusUART/ResponseFormat.capnp.h"
#include "riapsModbusUART/CommandFormat.capnp.h"

// Name of the ports from the model file
#define PORT_TIMER_CLOCK "clock"
#define PORT_PUB_TX_MODBUSDATA "tx_modbusData"
#define PORT_REQ_MODBUSREQPORT "modbusReqPort"

namespace riapsmodbuscreqrepuart {
   namespace components {
      
      class ComputationalComponentBase : public riaps::ComponentBase {
         
         public:
         ComputationalComponentBase(_component_conf_j &config, riaps::Actor &actor);
         
         virtual void OnClock(riaps::ports::PortBase *port)=0;
         
         virtual bool SendTx_modbusData(capnp::MallocMessageBuilder& messageBuilder,
         riapsModbusUART::LogData::Builder& message);
         
         bool SendModbusReqPort(capnp::MallocMessageBuilder&    messageBuilder,
         riapsModbusUART::CommandFormat::Builder& message);
         
         bool RecvModbusReqPort(riapsModbusUART::ResponseFormat::Reader &message);
         
         virtual ~ComputationalComponentBase();
         protected:
         virtual void DispatchMessage(capnp::FlatArrayMessageReader* capnpreader, riaps::ports::PortBase *port);
         virtual void DispatchInsideMessage(zmsg_t* zmsg, riaps::ports::PortBase* port);
      };
   }
}
#endif //RIAPS_CORE_COMPUTATIONALCOMPONENT_H
