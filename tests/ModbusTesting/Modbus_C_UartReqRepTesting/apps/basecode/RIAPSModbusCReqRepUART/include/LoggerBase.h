//
// Auto-generated by edu.vanderbilt.riaps.generator.ComponenetGenerator.xtend
//

#ifndef RIAPS_CORE_LOGGER_H
#define RIAPS_CORE_LOGGER_H

#include "componentmodel/r_componentbase.h"
#include "riapsModbusUART/LogData.capnp.h"

// Name of the ports from the model file
#define PORT_SUB_RX_MODBUSDATA "rx_modbusData"

namespace riapsmodbuscreqrepuart {
   namespace components {
      
      class LoggerBase : public riaps::ComponentBase {
         
         public:
         LoggerBase(_component_conf_j &config, riaps::Actor &actor);
         
         virtual void OnRx_modbusData (const riapsModbusUART::LogData::Reader &message,
         riaps::ports::PortBase *port)=0;
         
         virtual ~LoggerBase();
         protected:
         virtual void DispatchMessage(capnp::FlatArrayMessageReader* capnpreader, riaps::ports::PortBase *port);
         virtual void DispatchInsideMessage(zmsg_t* zmsg, riaps::ports::PortBase* port);
      };
   }
}
#endif //RIAPS_CORE_LOGGER_H
