//
// Auto-generated by edu.vanderbilt.riaps.generator.ComponenetGenerator.xtend
//

#ifndef RIAPS_CORE_MODBUSUART_H
#define RIAPS_CORE_MODBUSUART_H

#include <componentmodel/r_componentbase.h>
#include <ResponseFormat.capnp.h>
#include <CommandFormat.capnp.h>

// Name of the ports from the model file
#define PORT_REP_MODBUSREPPORT "modbusRepPort"
#define PORT_TIMER_CLOCK "clock"

namespace riapsmodbuscreqrepuart {
   namespace components {
      
      class ModbusUARTBase : public riaps::ComponentBase {
         
         public:
         ModbusUARTBase(_component_conf &config, riaps::Actor &actor);
         
         virtual void OnModbusRepPort(const riapsModbusUART::CommandFormat::Reader &message,
         riaps::ports::PortBase *port)=0;
         
         virtual bool SendModbusRepPort(capnp::MallocMessageBuilder& messageBuilder,
         riapsModbusUART::ResponseFormat::Builder& message);
         
         virtual void OnClock(riaps::ports::PortBase *port)=0;
         
         virtual ~ModbusUARTBase();
         protected:
         virtual void DispatchMessage(capnp::FlatArrayMessageReader* capnpreader, riaps::ports::PortBase *port);
         virtual void DispatchInsideMessage(zmsg_t* zmsg, riaps::ports::PortBase* port);
      };
   }
}
#endif //RIAPS_CORE_MODBUSUART_H
