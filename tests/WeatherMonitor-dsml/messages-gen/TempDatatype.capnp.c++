// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: TempDatatype.capnp

#include "TempDatatype.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<41> b_fda454d5fb991a23 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     35,  26, 153, 251, 213,  84, 164, 253,
     77,   0,   0,   0,   1,   0,   1,   0,
     52, 127,  80,  70, 171, 179,  53, 182,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   2,   0,   0,
     65,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     47, 104, 111, 109, 101,  47, 114, 105,
     97, 112, 115,  47, 101,  99, 108, 105,
    112, 115, 101,  45, 119, 111, 114, 107,
    115, 112,  97,  99, 101,  47,  87, 101,
     97, 116, 104, 101, 114,  77, 111, 110,
    105, 116, 111, 114,  47, 109, 101, 115,
    115,  97, 103, 101, 115,  45, 103, 101,
    110,  47,  84, 101, 109, 112,  68,  97,
    116,  97, 116, 121, 112, 101,  46,  99,
     97, 112, 110, 112,  58,  84, 101, 109,
    112,  68,  97, 116,  97, 116, 121, 112,
    101,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    116, 101, 109, 112,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fda454d5fb991a23 = b_fda454d5fb991a23.words;
#if !CAPNP_LITE
static const uint16_t m_fda454d5fb991a23[] = {0};
static const uint16_t i_fda454d5fb991a23[] = {0};
const ::capnp::_::RawSchema s_fda454d5fb991a23 = {
  0xfda454d5fb991a23, b_fda454d5fb991a23.words, 41, nullptr, m_fda454d5fb991a23,
  0, 1, i_fda454d5fb991a23, nullptr, nullptr, { &s_fda454d5fb991a23, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// TempDatatype
#ifndef _MSC_VER
constexpr uint16_t TempDatatype::_capnpPrivate::dataWordSize;
constexpr uint16_t TempDatatype::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind TempDatatype::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* TempDatatype::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* TempDatatype::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



